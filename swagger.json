{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Squad 4 - Codenation NodeJS",
    "description": "Projeto Final"
    },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ]
      },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "parameters": [
            {
              "name": "user",
              "in": "path",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          ]
        }
      },
        "/users/{userId}": {
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "description": "ID of user that we want to find",
              "type": "string"
            }
          ],
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        },
"definitions": {
    "Users": {
      "required": [
        "name"
      ]
    },
    "Logs": {
      "required": [
        "name",
        "username",
        "e-mail"
        ],
  "/logs": {
    "get": {
      "tags": [
        "Logs"
      ],
      "description": "Get logs in the system",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Get all logins",
          "schema": {
            "$ref": "#/definitions/logs"
          }
        }
      }
    },
  "delete": {
    "summary": "Delete logs",
    "tags": [
      "Logs"
    ],
    "responses": {
      "204": {
        "description": "Login is deleted",
        "schema": {
          "$ref": "#/definitions/logs"
        }
      }
    },
    "parameters": [
      {
        "name": "user",
        "in": "path",
        "schema": {
          "$ref": "#/definitions/logs"
        }
      }
    ]
  },    
     "post": {
      "summary": "Post log",
      "tags": [
        "Logs"
      ],
      "parameters": [
        {
          "name": "user",
          "in": "path",
          "description": "User with new values of properties",
          "schema": {
            "$ref": "#/definitions/logs"
          }
        }
      ],
    "responses": {
      "200": {
        "description": "Log is posted",
        "schema": {
          "$ref": "#/definitions/logs"
        }
      }
    },
    "put": {
      "summary": "Update log",
      "tags": [
        "Logs"
      ],
      "parameters": [
        {
          "name": "user",
          "in": "path",
          "description": "Log with new values of properties",
          "schema": {
            "$ref": "#/definitions/logs"
          }
        }
      ]
    },
"definitions": {
      "Auth": {
        "required": [
          "name",
          "password"
        ],
  "paths": {
    "/auth/login": {
      "post": {
      "summary": "Post auth",
      "tags": [
        "Logs"
      ],
      "parameters": [
        {
          "name": "user",
          "in": "body",
          "description": "Auth with new propeties",
          "schema": {
            "$ref": "#/definitions/auth"
          }
        }
      ],
    "responses": {
      "200": {
        "description": "Auth is posted",
        "schema": {
          "$ref": "#/definitions/auth"
        }
      }
    }
  }
}
  }
}
}
     }
    }
  }
}
}
        }
      }
    }
  }
}
